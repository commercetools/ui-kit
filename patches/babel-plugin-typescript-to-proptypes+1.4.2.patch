diff --git a/node_modules/babel-plugin-typescript-to-proptypes/lib/convertBabelToPropTypes.js b/node_modules/babel-plugin-typescript-to-proptypes/lib/convertBabelToPropTypes.js
index 4d3252f..78a1e95 100644
--- a/node_modules/babel-plugin-typescript-to-proptypes/lib/convertBabelToPropTypes.js
+++ b/node_modules/babel-plugin-typescript-to-proptypes/lib/convertBabelToPropTypes.js
@@ -154,8 +154,8 @@ function convert(type, state, depth) {
         else if (state.typeChecker) {
             return convertTSToPropTypes_1.convertSymbolFromSource(state.filePath, name, state);
         }
-        // Nothing found, so just omit
-        return null;
+        // PATCH: return `any` in case a type cannot be mapped. For example, when the prop refers to a generic type.
+        return propTypes_1.createMember(core_1.types.identifier('any'), propTypesImportedName);
         // [] -> PropTypes.arrayOf(), PropTypes.array
     }
     else if (core_1.types.isTSArrayType(type)) {
