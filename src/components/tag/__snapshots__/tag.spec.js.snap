// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Tag /> rendering when \`linkTo\` is not set should output correct tree 1`] = `
<Horizontal
  constraint="scale"
>
  <div
    className="wrapper wrapperTypeNormal"
  >
    <TagNormalBody
      isDisabled={false}
      onClick={[MockFunction]}
      onRemove={[MockFunction]}
      type="normal"
    >
      Icecream we scream!
    </TagNormalBody>
    <AccessibleButton
      buttonAttributes={Object {}}
      className="removeWrapper removeWrapperTypeNormal"
      isDisabled={false}
      isToggleButton={false}
      label="Remove"
      onClick={[MockFunction]}
      type="button"
    >
      <CloseBoldIcon
        size="medium"
      />
    </AccessibleButton>
  </div>
</Horizontal>
`;

exports[`<Tag /> rendering when \`linkTo\` is set should output correct tree 1`] = `
<Horizontal
  constraint="scale"
>
  <div
    className="wrapper wrapperTypeNormal"
  >
    <TagLinkBody
      isDisabled={false}
      linkTo="/foo"
      onClick={[MockFunction]}
      type="normal"
    >
      Icecream we scream!
    </TagLinkBody>
  </div>
</Horizontal>
`;

exports[`<Tag /> rendering when disabled should output correct tree 1`] = `
<Horizontal
  constraint="scale"
>
  <div
    className="wrapper wrapperTypeNormal disabledWrapper"
  >
    <TagNormalBody
      isDisabled={true}
      type="normal"
    >
      Icecream we scream!
    </TagNormalBody>
  </div>
</Horizontal>
`;

exports[`<Tag /> rendering when of type \`normal\` (default) should output correct tree 1`] = `
<Horizontal
  constraint="scale"
>
  <div
    className="wrapper wrapperTypeNormal"
  >
    <TagNormalBody
      isDisabled={false}
      type="normal"
    >
      Icecream we scream!
    </TagNormalBody>
  </div>
</Horizontal>
`;

exports[`<Tag /> rendering when of type \`warning\` should output correct tree 1`] = `
<Horizontal
  constraint="scale"
>
  <div
    className="wrapper wrapperTypeWarning"
  >
    <TagNormalBody
      isDisabled={false}
      type="warning"
    >
      Icecream we scream!
    </TagNormalBody>
  </div>
</Horizontal>
`;

exports[`<Tag /> rendering when removable (\`onRemove\`) should output correct tree 1`] = `
<Horizontal
  constraint="scale"
>
  <div
    className="wrapper wrapperTypeNormal"
  >
    <TagNormalBody
      isDisabled={false}
      onRemove={[MockFunction]}
      type="normal"
    >
      Icecream we scream!
    </TagNormalBody>
    <AccessibleButton
      buttonAttributes={Object {}}
      className="removeWrapper removeWrapperTypeNormal"
      isDisabled={false}
      isToggleButton={false}
      label="Remove"
      onClick={[MockFunction]}
      type="button"
    >
      <CloseBoldIcon
        size="medium"
      />
    </AccessibleButton>
  </div>
</Horizontal>
`;

exports[`\`<TagLinkBody />\` rendering when disabled (\`isDisabled\`) should match the recoreded snapshot 1`] = `
<div
  className="contentWrapper contentWrapperNormal disabledContent"
>
  <TextDetail>
    Icecream we scream!
  </TextDetail>
</div>
`;

exports[`\`<TagLinkBody />\` rendering when enabled (\`isDisabled\`) should match the recoreded snapshot 1`] = `
<div
  className="contentWrapper contentWrapperNormal clickableContentWrapperNormal clickableContentWrapper plainLink"
>
  <Link
    onClick={[MockFunction]}
    replace={false}
    to="foo-too"
  >
    <TextDetail>
      Icecream we scream!
    </TextDetail>
  </Link>
</div>
`;

exports[`\`<TagNormalBody />\` rendering should output correct tree 1`] = `
<div
  className="contentWrapper contentWrapperNormal clickableContentWrapperNormal clickableContentWrapper"
  onClick={[MockFunction]}
>
  <TextDetail>
    Icecream we scream!
  </TextDetail>
</div>
`;
