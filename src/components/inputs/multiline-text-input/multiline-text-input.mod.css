:root {
  /* we need this line-height to achieve 32px height when the component has only one row */
  --size-input-line-height: 22px;
  --size-input-min-height: 32px;
}

.expand {
  float: right;
}

/******** States ********/

/* Default */

.textarea {
  color: var(--font-color-default);
  font-family: var(--font-family-default);
  font-size: var(--font-size-default);
  padding: var(--spacing-4) var(--spacing-8);
  border-radius: var(--border-radius-input);
  transition: var(--transition-standard);
  line-height: var(--size-input-line-height);
  min-height: var(--size-input-min-height);
  resize: vertical;
  width: 100%;
  overflow: hidden;
  word-break: break-all;
  white-space: pre-wrap;
  outline: 0;
}

.textarea::placeholder {
  color: var(--font-color-placeholder);
}

.pristine {
  composes: textarea;
  border: 1px solid var(--border-color-input-pristine);
  background: var(--background-color-input-pristine);
}

/* Focused */
.pristine:focus {
  border: 1px solid var(--border-color-input-focus);
}

/* Disabled */
.disabled {
  composes: textarea;
  color: var(--font-color-disabled);
  border: 1px solid var(--border-color-input-disabled);
  background: var(--background-color-input-disabled);
  resize: none;
}

/* Read only */

.readonly {
  composes: textarea;
  border: 1px solid var(--border-color-input-readonly);
  color: var(--font-color-readonly);
}

/******** Form validation ********/

/* hasError */

.error {
  composes: textarea;
  color: var(--font-color-error);
  border: 1px solid var(--border-color-input-error);
}

/* hasWarning */

.warning {
  composes: textarea;
  color: var(--font-color-warning);
  border: 1px solid var(--border-color-input-warning);
}

/******** Variations ********/
