// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// This file is created with 'pnpm generate-icons'.
// Original SVG file: src/rich-text-body/icons/svg/more-styles.react.svg
/* eslint-disable @typescript-eslint/no-unused-vars */
import { warning } from '@commercetools-uikit/utils';
import { css, ClassNames } from '@emotion/react';
import { designTokens } from '@commercetools-uikit/design-system';
export type Props = {
  color?:
    | 'solid'
    | 'neutral60'
    | 'surface'
    | 'info'
    | 'primary'
    | 'primary40'
    | 'warning'
    | 'error'
    | 'success';
  /**
   * The size of the icon. 'small', 'medium', 'big' have been deprecated in favor of '10', '20', '30', '40'.
   */
  size?: 'small' | 'medium' | 'big' | 'scale' | '10' | '20' | '30' | '40';
};
export type SVGProps = Props & {
  className: string;
};
const iconSizes = {
  small: 12,
  medium: 16,
  big: 24,
  '10': 12,
  '20': 16,
  '30': 20,
  '40': 24,
} as const;
const getSizeDimensions = (size: Props['size']) => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto',
      };
    case 'small':
    case 'medium':
    case 'big':
    case '10':
    case '20':
    case '30':
    case '40':
      return {
        width: `${iconSizes[size]}px`,
        height: `${iconSizes[size]}px`,
      };
    default:
      return {
        width: `${iconSizes['40']}px`,
        height: `${iconSizes['40']}px`,
      };
  }
};
const getSizeStyle = (size: Props['size']) => {
  const dimensions = getSizeDimensions(size);
  switch (size) {
    case 'scale':
      return `
        &:not(:root) {
          width: ${dimensions.width};
          height: ${dimensions.height};
        }
      `;
    default:
      return `
        width: ${dimensions.width};
        height: ${dimensions.height};
      `;
  }
};
const getColor = (color: Props['color']) => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designTokens.colorError;
      break;
    case 'success':
      iconColor = designTokens.colorSuccess;
      break;
    default:
      break;
  }
  if (!iconColor) {
    warning(
      color,
      `ui-kit/Icon: the specified color '${color}' is not supported.`
    );
    return 'inherit';
  }
  return iconColor;
};
export const getIconStyles = (props: Props) => css`
  *:not([fill='none']) {
    fill: ${getColor(props.color)};
  }
  &,
  image {
    ${getSizeStyle(props.size)};
  }
  flex-shrink: 0;
`;
const SvgMoreStyles = (props: SVGProps) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    xmlnsXlink="http://www.w3.org/1999/xlink"
    width={24}
    height={24}
    viewBox="0 0 24 24"
    role="img"
    {...props}
  >
    <defs>
      <path
        id="more-styles_react_svg__a"
        d="M9.261 8.057a9 9 0 0 1 3.548.738l-.605 1.384q-1.692-.697-3.066-.697-1.21 0-1.825.38-.615.378-.615 1.045 0 .451.23.77.232.317.744.604.513.288 1.969.83.533.195.974.39L13.5 13.5v1.25h-1.007q.552.693.552 1.684 0 1.57-1.169 2.42t-3.281.851q-2.235 0-3.486-.707v-1.58q.81.411 1.738.646a7.3 7.3 0 0 0 1.789.236q1.333 0 2.05-.425.72-.426.719-1.297 0-.657-.57-1.123-.382-.315-1.255-.704L4.5 14.75V13.5h2.164a4 4 0 0 1-.279-.168q-.66-.435-.984-.99-.323-.553-.323-1.322 0-1.374 1.118-2.169t3.065-.794m11.27 2.443q.19 0 .33.148.138.148.139.35a.5.5 0 0 1-.078.273l-.061.078-3.281 3.489a.44.44 0 0 1-.587.064l-.073-.064-3.28-3.49a.5.5 0 0 1-.14-.35q0-.202.14-.35a.45.45 0 0 1 .237-.139l.092-.009zm-7.076-7.094.795 1.303.802-1.303h1.267l-1.333 2.003L16.381 7.5h-1.27l-.861-1.403-.864 1.403h-1.267l1.388-2.091-1.319-2.003z"
      />
    </defs>
    <use
      xlinkHref="#more-styles_react_svg__a"
      fill="#1A1A1A"
      fillRule="evenodd"
    />
  </svg>
);
SvgMoreStyles.displayName = 'SvgMoreStyles';
const MoreStylesIcon = (props: Props) => (
  <ClassNames>
    {({ css: createClass }) => (
      <SvgMoreStyles {...props} className={createClass(getIconStyles(props))} />
    )}
  </ClassNames>
);
MoreStylesIcon.displayName = 'MoreStylesIcon';
export default MoreStylesIcon;
