// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// This file is created with 'yarn generate-icons'.
// Original SVG file: src/svg/list-with-search.react.svg

/* eslint-disable @typescript-eslint/no-unused-vars */
import { warning } from '@commercetools-uikit/utils';
import { css, ClassNames } from '@emotion/react';
import { designTokens } from '@commercetools-uikit/design-system';
export type Props = {
  color?:
    | 'solid'
    | 'neutral60'
    | 'surface'
    | 'info'
    | 'primary'
    | 'primary40'
    | 'warning'
    | 'error';
  size?: 'small' | 'medium' | 'big' | 'scale';
};
export type SVGProps = Props & {
  className: string;
};
const iconSizes = {
  small: 12,
  medium: 16,
  big: 24,
} as const;

const getSizeDimensions = (size: Props['size']) => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto',
      };

    case 'small':
    case 'medium':
    case 'big':
      return {
        width: `${iconSizes[size]}px`,
        height: `${iconSizes[size]}px`,
      };

    default:
      return {
        width: `${iconSizes.big}px`,
        height: `${iconSizes.big}px`,
      };
  }
};

const getSizeStyle = (size: Props['size']) => {
  const dimensions = getSizeDimensions(size);

  switch (size) {
    case 'scale':
      return `
        &:not(:root) {
          width: ${dimensions.width};
          height: ${dimensions.height};
        }
      `;

    default:
      return `
        width: ${dimensions.width};
        height: ${dimensions.height};
      `;
  }
};

const getColor = (color: Props['color']) => {
  if (!color) return 'inherit';
  let iconColor;

  switch (color) {
    case 'solid':
      iconColor = designTokens.colorSolid;
      break;

    case 'neutral60':
      iconColor = designTokens.colorNeutral60;
      break;

    case 'surface':
      iconColor = designTokens.colorSurface;
      break;

    case 'info':
      iconColor = designTokens.colorInfo;
      break;

    case 'primary':
      iconColor = designTokens.colorPrimary;
      break;

    case 'primary40':
      iconColor = designTokens.colorPrimary40;
      break;

    case 'warning':
      iconColor = designTokens.colorWarning;
      break;

    case 'error':
      iconColor = designTokens.colorError;
      break;

    default:
      break;
  }

  if (!iconColor) {
    warning(
      color,
      `ui-kit/Icon: the specified color '${color}' is not supported.`
    );
    return 'inherit';
  }

  return iconColor;
};

export const getIconStyles = (props: Props) => css`
  *:not([fill='none']) {
    fill: ${getColor(props.color)};
  }
  &,
  image {
    ${getSizeStyle(props.size)};
  }
  flex-shrink: 0;
`;

const SvgListWithSearch = (props: SVGProps) => (
  <svg
    width={32}
    height={32}
    viewBox="0 0 32 32"
    xmlns="http://www.w3.org/2000/svg"
    role="img"
    {...props}
  >
    <g fillRule="evenodd">
      <path
        d="M27.735 25.952a.927.927 0 0 0-.308-.662l-5.31-4.736a7.795 7.795 0 0 1-1.882 1.883l4.734 5.311a.929.929 0 0 0 1.341.039l1.155-1.155a.927.927 0 0 0 .27-.68ZM23.123 13.94c0-4.764-3.876-8.64-8.64-8.64-4.764 0-8.64 3.876-8.64 8.64 0 4.764 3.876 8.64 8.64 8.64 4.764 0 8.64-3.876 8.64-8.64Zm-8.64 6.583A6.59 6.59 0 0 1 7.9 13.94a6.59 6.59 0 0 1 6.583-6.583 6.59 6.59 0 0 1 6.583 6.583 6.59 6.59 0 0 1-6.583 6.583Z"
        fillRule="nonzero"
      />
      <path
        d="m13.697 14.776-.917-.972a.5.5 0 0 0-.728 0l-.713.756a.5.5 0 0 0 0 .686l2.358 2.499 4.339-4.599a.5.5 0 0 0 0-.686l-.714-.756a.5.5 0 0 0-.727 0l-2.898 3.072Z"
        fillRule="nonzero"
      />
      <path d="M6.421 19.001 4.6 19a.6.6 0 0 1-.592-.503L4 18.4v-1.8a.6.6 0 0 1 .503-.592L4.6 16l.611.001a9.443 9.443 0 0 0 1.21 3ZM25.4 16a.6.6 0 0 1 .6.6v1.8a.6.6 0 0 1-.6.6l-2.821.001c.564-.91.978-1.92 1.21-3L25.4 16ZM5.052 13H4.6a.6.6 0 0 1-.592-.503L4 12.4v-1.8a.6.6 0 0 1 .503-.592L4.6 10h1.28a9.438 9.438 0 0 0-.828 3ZM25.4 10a.6.6 0 0 1 .6.6v1.8a.6.6 0 0 1-.6.6h-1.452a9.438 9.438 0 0 0-.829-3H25.4Zm0-6a.6.6 0 0 1 .6.6v1.8a.6.6 0 0 1-.6.6h-4.477A9.466 9.466 0 0 0 14.5 4.5 9.466 9.466 0 0 0 8.077 7H4.6a.6.6 0 0 1-.592-.503L4 6.4V4.6a.6.6 0 0 1 .503-.592L4.6 4h20.8Z" />
    </g>
  </svg>
);

SvgListWithSearch.displayName = 'SvgListWithSearch';

const ListWithSearchIcon = (props: Props) => (
  <ClassNames>
    {({ css: createClass }) => (
      <SvgListWithSearch
        {...props}
        className={createClass(getIconStyles(props))}
      />
    )}
  </ClassNames>
);

ListWithSearchIcon.displayName = 'ListWithSearchIcon';
export default ListWithSearchIcon;
