// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// This file is created with 'yarn generate-icons'.
// Original SVG file: src/svg/heart.react.svg
/* eslint-disable @typescript-eslint/no-unused-vars */
import { warning } from '@commercetools-uikit/utils';
import { css, ClassNames } from '@emotion/react';
import { designTokens } from '@commercetools-uikit/design-system';
export type Props = {
  color?:
    | 'solid'
    | 'neutral60'
    | 'surface'
    | 'info'
    | 'primary'
    | 'primary40'
    | 'warning'
    | 'error';
  size?: 'small' | 'medium' | 'big' | 'scale';
};
export type SVGProps = Props & {
  className: string;
};
const iconSizes = {
  small: 12,
  medium: 16,
  big: 24,
} as const;
const getSizeDimensions = (size: Props['size']) => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto',
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: `${iconSizes[size]}px`,
        height: `${iconSizes[size]}px`,
      };
    default:
      return {
        width: `${iconSizes.big}px`,
        height: `${iconSizes.big}px`,
      };
  }
};
const getSizeStyle = (size: Props['size']) => {
  const dimensions = getSizeDimensions(size);
  switch (size) {
    case 'scale':
      return `
        &:not(:root) {
          width: ${dimensions.width};
          height: ${dimensions.height};
        }
      `;
    default:
      return `
        width: ${dimensions.width};
        height: ${dimensions.height};
      `;
  }
};
const getColor = (color: Props['color']) => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designTokens.colorError;
      break;
    default:
      break;
  }
  if (!iconColor) {
    warning(
      color,
      `ui-kit/Icon: the specified color '${color}' is not supported.`
    );
    return 'inherit';
  }
  return iconColor;
};
export const getIconStyles = (props: Props) => css`
  *:not([fill='none']) {
    fill: ${getColor(props.color)};
  }
  &,
  image {
    ${getSizeStyle(props.size)};
  }
  flex-shrink: 0;
`;
const SvgHeart = (props: SVGProps) => (
  <svg
    width={24}
    height={24}
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
    role="img"
    {...props}
  >
    <path d="m9.785 18.085-1.553-1.418a61.404 61.404 0 0 1-4.308-4.331C2.641 10.904 2 9.325 2 7.6c0-1.41.473-2.588 1.417-3.533C4.364 3.122 5.54 2.65 6.95 2.65c.795 0 1.545.169 2.25.506.705.338 1.305.799 1.8 1.384a5.366 5.366 0 0 1 1.8-1.384 5.149 5.149 0 0 1 2.25-.506c1.41 0 2.587.472 3.532 1.417C19.527 5.012 20 6.19 20 7.6c0 1.725-.637 3.308-1.913 4.748a53.867 53.867 0 0 1-4.342 4.342l-1.53 1.395A1.7 1.7 0 0 1 11 18.58a1.7 1.7 0 0 1-1.215-.495Zm.36-11.745c-.435-.615-.9-1.084-1.395-1.407-.495-.322-1.095-.483-1.8-.483-.9 0-1.65.3-2.25.9-.6.6-.9 1.35-.9 2.25 0 .78.277 1.609.833 2.486.554.878 1.218 1.729 1.991 2.554a34.443 34.443 0 0 0 2.385 2.317c.817.72 1.481 1.313 1.991 1.778.51-.465 1.174-1.057 1.992-1.777a34.713 34.713 0 0 0 2.385-2.318 17.186 17.186 0 0 0 1.99-2.554c.555-.877.833-1.706.833-2.486 0-.9-.3-1.65-.9-2.25-.6-.6-1.35-.9-2.25-.9-.705 0-1.305.161-1.8.483-.495.323-.96.792-1.395 1.407a1.024 1.024 0 0 1-.855.45 1.024 1.024 0 0 1-.855-.45Z" />
  </svg>
);
SvgHeart.displayName = 'SvgHeart';
const HeartIcon = (props: Props) => (
  <ClassNames>
    {({ css: createClass }) => (
      <SvgHeart {...props} className={createClass(getIconStyles(props))} />
    )}
  </ClassNames>
);
HeartIcon.displayName = 'HeartIcon';
export default HeartIcon;
