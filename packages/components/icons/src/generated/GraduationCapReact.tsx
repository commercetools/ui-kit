// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// This file is created with 'yarn generate-icons'.
// Original SVG file: src/svg/graduation-cap.react.svg

/* eslint-disable @typescript-eslint/no-unused-vars */
import { warning } from '@commercetools-uikit/utils';
import { css, ClassNames } from '@emotion/react';
import { designTokens } from '@commercetools-uikit/design-system';
export type Props = {
  color?:
    | 'solid'
    | 'neutral60'
    | 'surface'
    | 'info'
    | 'primary'
    | 'primary40'
    | 'warning'
    | 'error';
  size?: 'small' | 'medium' | 'big' | 'scale';
};
export type SVGProps = Props & {
  className: string;
};
const iconSizes = {
  small: 12,
  medium: 16,
  big: 24,
} as const;

const getSizeDimensions = (size: Props['size']) => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto',
      };

    case 'small':
    case 'medium':
    case 'big':
      return {
        width: `${iconSizes[size]}px`,
        height: `${iconSizes[size]}px`,
      };

    default:
      return {
        width: `${iconSizes.big}px`,
        height: `${iconSizes.big}px`,
      };
  }
};

const getSizeStyle = (size: Props['size']) => {
  const dimensions = getSizeDimensions(size);

  switch (size) {
    case 'scale':
      return `
        &:not(:root) {
          width: ${dimensions.width};
          height: ${dimensions.height};
        }
      `;

    default:
      return `
        width: ${dimensions.width};
        height: ${dimensions.height};
      `;
  }
};

const getColor = (color: Props['color']) => {
  if (!color) return 'inherit';
  let iconColor;

  switch (color) {
    case 'solid':
      iconColor = designTokens.colorSolid;
      break;

    case 'neutral60':
      iconColor = designTokens.colorNeutral60;
      break;

    case 'surface':
      iconColor = designTokens.colorSurface;
      break;

    case 'info':
      iconColor = designTokens.colorInfo;
      break;

    case 'primary':
      iconColor = designTokens.colorPrimary;
      break;

    case 'primary40':
      iconColor = designTokens.colorPrimary40;
      break;

    case 'warning':
      iconColor = designTokens.colorWarning;
      break;

    case 'error':
      iconColor = designTokens.colorError;
      break;

    default:
      break;
  }

  if (!iconColor) {
    warning(
      color,
      `ui-kit/Icon: the specified color '${color}' is not supported.`
    );
    return 'inherit';
  }

  return iconColor;
};

export const getIconStyles = (props: Props) => css`
  *:not([fill='none']) {
    fill: ${getColor(props.color)};
  }
  &,
  image {
    ${getSizeStyle(props.size)};
  }
  flex-shrink: 0;
`;

const SvgGraduationCap = (props: SVGProps) => (
  <svg
    width={24}
    height={24}
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    role="img"
    {...props}
  >
    <path
      d="M11.628 18.94c-.113 0-.22-.01-.319-.032-.099-.021-.198-.06-.297-.117l-4.888-2.678a1.314 1.314 0 0 1-.478-.467 1.245 1.245 0 0 1-.18-.659v-4.335l-2.147-1.17a.523.523 0 0 1-.245-.233A.703.703 0 0 1 3 8.93c0-.113.025-.22.074-.318.05-.1.131-.178.245-.234l7.693-4.208c.099-.057.198-.1.297-.127.1-.029.206-.043.32-.043a1.156 1.156 0 0 1 .615.17l8.416 4.57c.113.07.198.155.255.254.057.1.085.206.085.319v5.716a.62.62 0 0 1-.637.638.62.62 0 0 1-.638-.637V9.674l-1.934.978v4.335c0 .24-.06.46-.18.659-.121.198-.28.354-.479.467l-4.888 2.678c-.099.057-.198.096-.297.117-.1.021-.206.032-.319.032Zm0-6.354 6.694-3.656-6.694-3.591L4.976 8.93l6.652 3.656Zm0 5.1 4.888-2.699v-3.57l-4.272 2.295c-.099.057-.198.096-.297.117a1.517 1.517 0 0 1-.627 0 1.061 1.061 0 0 1-.287-.117L6.74 11.374v3.613l4.888 2.699Z"
      fill="#000"
    />
  </svg>
);

SvgGraduationCap.displayName = 'SvgGraduationCap';

const GraduationCapIcon = (props: Props) => (
  <ClassNames>
    {({ css: createClass }) => (
      <SvgGraduationCap
        {...props}
        className={createClass(getIconStyles(props))}
      />
    )}
  </ClassNames>
);

GraduationCapIcon.displayName = 'GraduationCapIcon';
export default GraduationCapIcon;
