// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// This file is created with 'yarn generate-icons'.
// Original SVG file: src/svg/rocket.react.svg
/* eslint-disable @typescript-eslint/no-unused-vars */
import { warning } from '@commercetools-uikit/utils';
import { css, ClassNames } from '@emotion/react';
import { designTokens } from '@commercetools-uikit/design-system';
export type Props = {
  color?:
    | 'solid'
    | 'neutral60'
    | 'surface'
    | 'info'
    | 'primary'
    | 'primary40'
    | 'warning'
    | 'error'
    | 'success';
  /**
   * The size of the icon. 'small', 'medium', 'big' have been deprecated in favor of '10', '20', '30', '40'.
   */
  size?: 'small' | 'medium' | 'big' | 'scale' | '10' | '20' | '30' | '40';
};
export type SVGProps = Props & {
  className: string;
};
const iconSizes = {
  small: 12,
  medium: 16,
  big: 24,
  '10': 12,
  '20': 16,
  '30': 20,
  '40': 24,
} as const;
const getSizeDimensions = (size: Props['size']) => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto',
      };
    case 'small':
    case 'medium':
    case 'big':
    case '10':
    case '20':
    case '30':
    case '40':
      return {
        width: `${iconSizes[size]}px`,
        height: `${iconSizes[size]}px`,
      };
    default:
      return {
        width: `${iconSizes['40']}px`,
        height: `${iconSizes['40']}px`,
      };
  }
};
const getSizeStyle = (size: Props['size']) => {
  const dimensions = getSizeDimensions(size);
  switch (size) {
    case 'scale':
      return `
        &:not(:root) {
          width: ${dimensions.width};
          height: ${dimensions.height};
        }
      `;
    default:
      return `
        width: ${dimensions.width};
        height: ${dimensions.height};
      `;
  }
};
const getColor = (color: Props['color']) => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designTokens.colorError;
      break;
    case 'success':
      iconColor = designTokens.colorSuccess;
      break;
    default:
      break;
  }
  if (!iconColor) {
    warning(
      color,
      `ui-kit/Icon: the specified color '${color}' is not supported.`
    );
    return 'inherit';
  }
  return iconColor;
};
export const getIconStyles = (props: Props) => css`
  *:not([fill='none']) {
    fill: ${getColor(props.color)};
  }
  &,
  image {
    ${getSizeStyle(props.size)};
  }
  flex-shrink: 0;
`;
const SvgRocket = (props: SVGProps) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width={24}
    height={24}
    viewBox="0 0 24 24"
    role="img"
    {...props}
  >
    <path d="M7.648 11.105q.322-.645.668-1.242.345-.6.759-1.197l-1.289-.253-1.933 1.933zM18.74 4.777q-1.61.045-3.44.944a12.4 12.4 0 0 0-3.326 2.393 14.7 14.7 0 0 0-1.726 2.07q-.76 1.106-1.127 2.072l2.623 2.6q.967-.368 2.071-1.127a14.7 14.7 0 0 0 2.071-1.726 12.5 12.5 0 0 0 2.393-3.314q.898-1.818.944-3.429a.5.5 0 0 0-.034-.184.45.45 0 0 0-.265-.265.5.5 0 0 0-.184-.034M13.677 10.3a1.77 1.77 0 0 1-.53-1.3q0-.771.53-1.3.53-.53 1.312-.53t1.311.53.53 1.3q0 .77-.53 1.3-.529.53-1.311.53-.783 0-1.312-.53m-.782 6.029.76 1.818 1.932-1.933-.253-1.289q-.599.414-1.197.747a31 31 0 0 1-1.242.657M20.972 4.04a10.6 10.6 0 0 1-.829 4.935q-1.012 2.406-3.198 4.591l.46 2.278q.092.46-.046.898a1.84 1.84 0 0 1-.46.76l-2.9 2.899a.9.9 0 0 1-.828.264.82.82 0 0 1-.667-.54L11.1 16.835 7.165 12.9l-3.29-1.404a.85.85 0 0 1-.553-.667.88.88 0 0 1 .253-.828l2.9-2.9q.322-.322.771-.46t.908-.046l2.279.46q2.186-2.185 4.59-3.198a10.6 10.6 0 0 1 4.936-.829q.185.024.368.103a1.05 1.05 0 0 1 .54.542q.082.183.105.368M4.726 15.362q.805-.806 1.967-.817t1.968.794.793 1.967q-.011 1.163-.816 1.968-.576.575-1.921.99Q5.37 20.678 3 21q.322-2.37.736-3.717.414-1.345.99-1.92m1.311 1.289q-.23.23-.46.84a6 6 0 0 0-.322 1.23 6.5 6.5 0 0 0 1.232-.31q.609-.218.84-.449a1 1 0 0 0 .298-.667.84.84 0 0 0-.253-.667.87.87 0 0 0-.667-.265.95.95 0 0 0-.668.288" />
  </svg>
);
SvgRocket.displayName = 'SvgRocket';
const RocketIcon = (props: Props) => (
  <ClassNames>
    {({ css: createClass }) => (
      <SvgRocket {...props} className={createClass(getIconStyles(props))} />
    )}
  </ClassNames>
);
RocketIcon.displayName = 'RocketIcon';
export default RocketIcon;
