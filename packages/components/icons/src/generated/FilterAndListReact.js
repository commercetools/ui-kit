// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// This file is created with 'yarn generate-icons'.
// Original SVG file: src/svg/filter-and-list.react.svg

/* eslint-disable @typescript-eslint/no-unused-vars */
import React from 'react';
import PropTypes from 'prop-types';
import invariant from 'tiny-invariant';
import { css, useTheme } from '@emotion/react';
import { customProperties as vars } from '@commercetools-uikit/design-system';
const iconSizes = {
  small: 12,
  medium: 16,
  big: 24,
};

const getSizeStyle = (size) => {
  switch (size) {
    case 'scale':
      return `
        &:not(:root) {
          width: 100%;
          height: auto;
        }
      `;

    case 'small':
    case 'medium':
    case 'big':
      return `
        width: ${iconSizes[size]}px;
        height: ${iconSizes[size]}px;
      `;

    default:
      return `
        width: ${iconSizes.big}px;
        height: ${iconSizes.big}px;
      `;
  }
};

const capitalize = (s) => s[0].toUpperCase() + s.slice(1);

const getColor = (color, theme) => {
  if (!color) return 'inherit';
  const overwrittenVars = { ...vars, ...theme };
  const iconColor = overwrittenVars[`color${capitalize(color)}`];

  if (!iconColor) {
    invariant(
      color,
      `ui-kit/Icon: the specified color '${color}' is not supported.`
    );
    return 'inherit';
  }

  return iconColor;
};

const getIconStyles = (props, theme) => css`
  * {
    fill: ${getColor(props.color, theme)};
  }
  ${getSizeStyle(props.size)};
  flex-shrink: 0;
`;

const iconPropTypes = {
  color: PropTypes.oneOf([
    'solid',
    'neutral60',
    'surface',
    'info',
    'primary',
    'primary40',
    'warning',
    'error',
  ]),
  size: PropTypes.oneOf(['small', 'medium', 'big', 'scale']),
};

const SvgFilterAndList = (props) => (
  <svg
    width={16}
    height={16}
    viewBox="0 0 16 16"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <g
      id="filter-and-list_react_svg__Symbols"
      stroke="none"
      strokeWidth={1}
      fill="none"
      fillRule="evenodd"
      fillOpacity={0.85}
    >
      <g
        id="filter-and-list_react_svg__Component-/-icon-/-16px-/fliter-&amp;-lsit"
        fill="#000"
        fillRule="nonzero"
      >
        <path
          d="M13.5 12a.5.5 0 110 1h-3a.5.5 0 110-1h3zM12.017 2c.234 0 .391.144.457.339a.747.747 0 01-.057.536l-.064.098-3.67 4.401v6.034c0 .25-.096.425-.29.526a.49.49 0 01-.125.04l-.06.005a.396.396 0 01-.28-.109l-.055-.061-1.906-2.285a.595.595 0 01-.132-.29l-.009-.112V7.374L2.158 2.973c-.154-.173-.19-.458-.132-.645.08-.198.218-.298.382-.322L2.492 2h9.525zm-.989.999L3.48 2.997l3.346 4.015-.003 3.977.86 1.032v-5.01L11.029 3zM13.5 9a.5.5 0 110 1h-3a.5.5 0 110-1h3zm0-3a.5.5 0 110 1h-3a.5.5 0 110-1h3z"
          id="filter-and-list_react_svg__Shape"
        />
      </g>
    </g>
  </svg>
);

SvgFilterAndList.displayName = 'SvgFilterAndList';

const FilterAndListIcon = (props) => {
  const theme = useTheme();
  return <SvgFilterAndList {...props} css={getIconStyles(props, theme)} />;
};

FilterAndListIcon.propTypes = iconPropTypes;
export default FilterAndListIcon;
