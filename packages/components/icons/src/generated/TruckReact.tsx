// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// This file is created with 'yarn generate-icons'.
// Original SVG file: src/svg/truck.react.svg

/* eslint-disable @typescript-eslint/no-unused-vars */
import { warning } from '@commercetools-uikit/utils';
import { css, ClassNames } from '@emotion/react';
import { designTokens } from '@commercetools-uikit/design-system';
export type Props = {
  color?:
    | 'solid'
    | 'neutral60'
    | 'surface'
    | 'info'
    | 'primary'
    | 'primary40'
    | 'warning'
    | 'error';
  size?: 'small' | 'medium' | 'big' | 'scale';
};
export type SVGProps = Props & {
  className: string;
};
const iconSizes = {
  small: 12,
  medium: 16,
  big: 24,
} as const;

const getSizeDimensions = (size: Props['size']) => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto',
      };

    case 'small':
    case 'medium':
    case 'big':
      return {
        width: `${iconSizes[size]}px`,
        height: `${iconSizes[size]}px`,
      };

    default:
      return {
        width: `${iconSizes.big}px`,
        height: `${iconSizes.big}px`,
      };
  }
};

const getSizeStyle = (size: Props['size']) => {
  const dimensions = getSizeDimensions(size);

  switch (size) {
    case 'scale':
      return `
        &:not(:root) {
          width: ${dimensions.width};
          height: ${dimensions.height};
        }
      `;

    default:
      return `
        width: ${dimensions.width};
        height: ${dimensions.height};
      `;
  }
};

const getColor = (color: Props['color']) => {
  if (!color) return 'inherit';
  let iconColor;

  switch (color) {
    case 'solid':
      iconColor = designTokens.colorSolid;
      break;

    case 'neutral60':
      iconColor = designTokens.colorNeutral60;
      break;

    case 'surface':
      iconColor = designTokens.colorSurface;
      break;

    case 'info':
      iconColor = designTokens.colorInfo;
      break;

    case 'primary':
      iconColor = designTokens.colorPrimary;
      break;

    case 'primary40':
      iconColor = designTokens.colorPrimary40;
      break;

    case 'warning':
      iconColor = designTokens.colorWarning;
      break;

    case 'error':
      iconColor = designTokens.colorError;
      break;

    default:
      break;
  }

  if (!iconColor) {
    warning(
      color,
      `ui-kit/Icon: the specified color '${color}' is not supported.`
    );
    return 'inherit';
  }

  return iconColor;
};

export const getIconStyles = (props: Props) => css`
  *:not([fill='none']) {
    fill: ${getColor(props.color)};
  }
  &,
  image {
    ${getSizeStyle(props.size)};
  }
  flex-shrink: 0;
`;

const SvgTruck = (props: SVGProps) => (
  <svg
    width={24}
    height={24}
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
    role="img"
    {...props}
  >
    <path d="M6 20a2.893 2.893 0 0 1-2.125-.875A2.893 2.893 0 0 1 3 17c-.55 0-1.02-.196-1.412-.587A1.927 1.927 0 0 1 1 15V6c0-.55.196-1.02.588-1.412A1.923 1.923 0 0 1 3 4h12c.55 0 1.021.196 1.413.588.391.391.587.862.587 1.412v2h2.5c.167 0 .317.033.45.1s.25.167.35.3l2.5 3.325a.883.883 0 0 1 .15.275c.033.1.05.208.05.325V16c0 .283-.096.52-.288.712A.965.965 0 0 1 22 17h-1c0 .833-.292 1.542-.875 2.125A2.893 2.893 0 0 1 18 20a2.893 2.893 0 0 1-2.125-.875A2.893 2.893 0 0 1 15 17H9c0 .833-.292 1.542-.875 2.125A2.893 2.893 0 0 1 6 20Zm0-2a.968.968 0 0 0 .713-.288A.967.967 0 0 0 7 17a.967.967 0 0 0-.287-.712A.968.968 0 0 0 6 16a.968.968 0 0 0-.713.288A.967.967 0 0 0 5 17c0 .283.096.52.287.712.192.192.43.288.713.288ZM3 6v9h.8c.283-.3.608-.542.975-.725A2.701 2.701 0 0 1 6 14c.45 0 .858.092 1.225.275.367.183.692.425.975.725H15V6H3Zm15 12c.283 0 .52-.096.712-.288A.965.965 0 0 0 19 17a.965.965 0 0 0-.288-.712A.965.965 0 0 0 18 16a.965.965 0 0 0-.712.288A.965.965 0 0 0 17 17c0 .283.096.52.288.712A.965.965 0 0 0 18 18Zm-1-5h4.25L19 10h-2v3Z" />
  </svg>
);

SvgTruck.displayName = 'SvgTruck';

const TruckIcon = (props: Props) => (
  <ClassNames>
    {({ css: createClass }) => (
      <SvgTruck {...props} className={createClass(getIconStyles(props))} />
    )}
  </ClassNames>
);

TruckIcon.displayName = 'TruckIcon';
export default TruckIcon;
