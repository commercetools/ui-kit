// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// This file is created with 'yarn generate-icons'.
// Original SVG file: src/svg/hub.react.svg
/* eslint-disable @typescript-eslint/no-unused-vars */
import { warning } from '@commercetools-uikit/utils';
import { css, ClassNames } from '@emotion/react';
import { designTokens } from '@commercetools-uikit/design-system';
export type Props = {
  color?:
    | 'solid'
    | 'neutral60'
    | 'surface'
    | 'info'
    | 'primary'
    | 'primary40'
    | 'warning'
    | 'error'
    | 'success';
  /**
   * The size of the icon. 'small', 'medium', 'big' have been deprecated in favor of '10', '20', '30', '40'.
   */
  size?: 'small' | 'medium' | 'big' | 'scale' | '10' | '20' | '30' | '40';
};
export type SVGProps = Props & {
  className: string;
};
const iconSizes = {
  small: 12,
  medium: 16,
  big: 24,
  '10': 12,
  '20': 16,
  '30': 20,
  '40': 24,
} as const;
const getSizeDimensions = (size: Props['size']) => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto',
      };
    case 'small':
    case 'medium':
    case 'big':
    case '10':
    case '20':
    case '30':
    case '40':
      return {
        width: `${iconSizes[size]}px`,
        height: `${iconSizes[size]}px`,
      };
    default:
      return {
        width: `${iconSizes['40']}px`,
        height: `${iconSizes['40']}px`,
      };
  }
};
const getSizeStyle = (size: Props['size']) => {
  const dimensions = getSizeDimensions(size);
  switch (size) {
    case 'scale':
      return `
        &:not(:root) {
          width: ${dimensions.width};
          height: ${dimensions.height};
        }
      `;
    default:
      return `
        width: ${dimensions.width};
        height: ${dimensions.height};
      `;
  }
};
const getColor = (color: Props['color']) => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designTokens.colorError;
      break;
    case 'success':
      iconColor = designTokens.colorSuccess;
      break;
    default:
      break;
  }
  if (!iconColor) {
    warning(
      color,
      `ui-kit/Icon: the specified color '${color}' is not supported.`
    );
    return 'inherit';
  }
  return iconColor;
};
export const getIconStyles = (props: Props) => css`
  *:not([fill='none']) {
    fill: ${getColor(props.color)};
  }
  &,
  image {
    ${getSizeStyle(props.size)};
  }
  flex-shrink: 0;
`;
const SvgHub = (props: SVGProps) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width={24}
    height={24}
    fill="none"
    viewBox="0 0 24 24"
    aria-hidden="true"
    {...props}
  >
    <path
      fill="#1A1A1A"
      d="M7.5 20.25a2.17 2.17 0 0 1-1.594-.656A2.17 2.17 0 0 1 5.25 18q0-.937.656-1.594A2.17 2.17 0 0 1 7.5 15.75q.263 0 .487.056.225.057.432.15l1.069-1.331a3.26 3.26 0 0 1-.732-1.312 3.4 3.4 0 0 1-.094-1.463l-1.518-.506a2.4 2.4 0 0 1-.806.75 2.14 2.14 0 0 1-1.088.281 2.17 2.17 0 0 1-1.594-.656A2.17 2.17 0 0 1 3 10.125q0-.937.656-1.594a2.17 2.17 0 0 1 1.594-.656 2.17 2.17 0 0 1 1.594.656q.656.657.656 1.594v.15l1.519.525q.375-.675 1.003-1.144t1.415-.6V7.425a2.34 2.34 0 0 1-1.21-.797A2.13 2.13 0 0 1 9.75 5.25q0-.937.656-1.594A2.17 2.17 0 0 1 12 3a2.17 2.17 0 0 1 1.594.656q.656.657.656 1.594 0 .787-.488 1.378t-1.2.797v1.631q.789.132 1.417.6A3.6 3.6 0 0 1 14.98 10.8l1.519-.525v-.15q0-.937.656-1.594a2.17 2.17 0 0 1 1.594-.656 2.17 2.17 0 0 1 1.594.656q.656.657.656 1.594a2.17 2.17 0 0 1-.656 1.594 2.17 2.17 0 0 1-1.594.656q-.6 0-1.096-.281a2.24 2.24 0 0 1-.798-.75l-1.519.506q.112.732-.093 1.453a3.4 3.4 0 0 1-.732 1.322l1.07 1.313q.205-.094.43-.142.225-.046.488-.046a2.17 2.17 0 0 1 1.594.656q.656.657.656 1.594a2.17 2.17 0 0 1-.656 1.594 2.17 2.17 0 0 1-1.594.656 2.17 2.17 0 0 1-1.594-.656A2.17 2.17 0 0 1 14.25 18q0-.375.122-.721a2.4 2.4 0 0 1 .328-.629l-1.069-1.331a3.3 3.3 0 0 1-1.64.431 3.3 3.3 0 0 1-1.641-.431L9.3 16.65q.206.282.329.629.12.346.121.721a2.17 2.17 0 0 1-.656 1.594 2.17 2.17 0 0 1-1.594.656m-2.25-9.375q.318 0 .535-.216A.73.73 0 0 0 6 10.125a.73.73 0 0 0-.215-.535.73.73 0 0 0-.535-.215.73.73 0 0 0-.534.215.73.73 0 0 0-.216.535q0 .319.216.534a.72.72 0 0 0 .534.216M7.5 18.75q.318 0 .535-.216A.73.73 0 0 0 8.25 18a.73.73 0 0 0-.215-.534.73.73 0 0 0-.535-.216.73.73 0 0 0-.535.216.73.73 0 0 0-.215.534q0 .318.215.534a.73.73 0 0 0 .535.216M12 6q.319 0 .535-.216a.73.73 0 0 0 .215-.534.73.73 0 0 0-.215-.535A.73.73 0 0 0 12 4.5a.73.73 0 0 0-.534.215.73.73 0 0 0-.216.535q0 .319.216.534A.72.72 0 0 0 12 6m0 8.25a1.8 1.8 0 0 0 1.331-.544 1.8 1.8 0 0 0 .544-1.331 1.8 1.8 0 0 0-.544-1.331A1.8 1.8 0 0 0 12 10.5a1.8 1.8 0 0 0-1.331.544 1.8 1.8 0 0 0-.544 1.331q0 .788.544 1.331A1.8 1.8 0 0 0 12 14.25m4.5 4.5q.318 0 .534-.216A.72.72 0 0 0 17.25 18a.72.72 0 0 0-.216-.534.72.72 0 0 0-.534-.216.72.72 0 0 0-.534.216.72.72 0 0 0-.216.534q0 .318.216.534a.72.72 0 0 0 .534.216m2.25-7.875q.318 0 .534-.216a.72.72 0 0 0 .216-.534.73.73 0 0 0-.216-.535.73.73 0 0 0-.534-.215.73.73 0 0 0-.534.215.73.73 0 0 0-.216.535q0 .319.216.534a.72.72 0 0 0 .534.216"
    />
  </svg>
);
SvgHub.displayName = 'SvgHub';
const HubIcon = (props: Props) => (
  <ClassNames>
    {({ css: createClass }) => (
      <SvgHub {...props} className={createClass(getIconStyles(props))} />
    )}
  </ClassNames>
);
HubIcon.displayName = 'HubIcon';
export default HubIcon;
