/*
  THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

  This file is created by the 'scripts/generate-custom-properties.js' script.
  The variables should be updated in 'materials/internals/definition.yaml'.
*/

/* tslint:disable:object-literal-sort-keys */

type CustomProperties = {
  colorGreen: string;
  colorGreen25: string;
  colorGreen40: string;
  colorGreen85: string;
  colorGreen95: string;
  colorNavy: string;
  colorNavy30: string;
  colorNavy40: string;
  colorNavy95: string;
  colorNavy98: string;
  colorGray: string;
  colorGray60: string;
  colorGray90: string;
  colorGray95: string;
  colorBlue: string;
  colorBlue85: string;
  colorBlue95: string;
  colorOrange: string;
  colorOrange95: string;
  colorRed: string;
  colorRed95: string;
  colorPurple: string;
  colorBlack: string;
  colorWhite: string;
  borderRadius1: string;
  borderRadius2: string;
  borderRadius4: string;
  borderRadius6: string;
  borderRadius20: string;
  fontFamilyBody: string;
  fontSizeM: string;
  shadow1: string;
  shadow2: string;
  shadow3: string;
  shadow4: string;
  shadow5: string;
  shadow6: string;
  shadow7: string;
  shadow8: string;
  shadow9: string;
  shadow10: string;
  shadow11: string;
  shadow12: string;
  shadow13: string;
  shadow14: string;
  shadow15: string;
  constraintScale: string;
  constraintXs: string;
  constraintS: string;
  constraintM: string;
  constraintL: string;
  constraintXl: string;
  spacing4: string;
  spacing8: string;
  spacing16: string;
  spacing24: string;
  spacing32: string;
  transitionLinear80Ms: string;
  transitionEaseinout150Ms: string;
  transitionStandard: string;
  breakPointMobile: string;
  breakPointDesktop: string;
  breakPointBiggerdesktop: string;
  breakPointGiantdesktop: string;
  breakPointJumbodesktop: string;
  backgroundColorInputPristine: string;
  backgroundColorInputDisabled: string;
  backgroundColorInputHover: string;
  backgroundColorInputSelected: string;
  backgroundColorTagPristine: string;
  backgroundColorTagWarning: string;
  backgroundColorTagDisabled: string;
  backgroundColorTagNormalHover: string;
  backgroundColorTagWarningHover: string;
  backgroundColorForInput: string;
  backgroundColorForInputWhenDisabled: string;
  borderColorInputPristine: string;
  borderColorInputFocus: string;
  borderColorInputDisabled: string;
  borderColorInputReadonly: string;
  borderColorInputError: string;
  borderColorInputWarning: string;
  borderColorTagPristine: string;
  borderColorTagWarning: string;
  borderColorTagFocus: string;
  borderColorTagWarningHover: string;
  borderColorSeparator: string;
  borderColorForInput: string;
  borderColorForInputWhenFocused: string;
  borderColorForInputWhenDisabled: string;
  borderColorForInputWhenReadonly: string;
  borderColorForInputWhenError: string;
  borderColorForInputWhenWarning: string;
  borderRadiusInput: string;
  borderRadiusTag: string;
  borderRadiusForInput: string;
  fontColorDefault: string;
  fontColorDisabled: string;
  fontColorError: string;
  fontColorSuccess: string;
  fontColorWarning: string;
  fontColorReadonly: string;
  fontColorPlaceholder: string;
  fontColorForInput: string;
  fontColorForInputWhenDisabled: string;
  fontColorForInputWhenError: string;
  fontColorForInputWhenReadonly: string;
  fontColorForInputWhenWarning: string;
  fontFamily: string;
  placeholderFontColorForInput: string;
  fontSizeForInput: string;
  shadowBoxTagWhenHovered: string;
  bigButtonHeight: string;
  smallButtonHeight: string;
  sizeHeightInput: string;
  shadow1First: string;
  shadow1Second: string;
  shadow2First: string;
  shadow2Second: string;
  shadow3First: string;
  shadow3Second: string;
  shadow4First: string;
  shadow4Second: string;
  shadow5First: string;
  shadow5Second: string;
  shadow6First: string;
  shadow7First: string;
  shadow7Second: string;
  shadow8First: string;
  shadow8Second: string;
  shadow9First: string;
  shadow9Second: string;
  shadow9Third: string;
  shadow10First: string;
  shadow11First: string;
  shadow11Second: string;
  shadow12First: string;
  shadow13First: string;
  shadow14First: string;
  shadow15First: string;
  shadow15Second: string;
  fontFamilyDefault: string;
  fontSizeDefault: string;
  fontSizeSmall: string;
  shadowBoxTagHover: string;
  sizeHeightTag: string;
  standardInputHeight: string;
};

const customProperties: CustomProperties = {
  colorGreen: '#00b39e',
  colorGreen25: 'hsl(172.9608938547486, 100%, 25%)',
  colorGreen40: 'hsl(172.9608938547486, 100%, 40%)',
  colorGreen85: 'hsl(172.9608938547486, 100%, 85%)',
  colorGreen95: 'hsl(172.9608938547486, 100%, 95%)',
  colorNavy: '#213c45',
  colorNavy30: 'hsl(195, 35.2941176471%, 30%)',
  colorNavy40: 'hsl(195, 35.2941176471%, 40%)',
  colorNavy95: 'hsl(195, 35.2941176471%, 95%)',
  colorNavy98: 'hsl(195, 35.2941176471%, 98%)',
  colorGray: '#ccc',
  colorGray60: 'hsl(0, 0%, 60%)',
  colorGray90: 'hsl(0, 0%, 90%)',
  colorGray95: 'hsl(0, 0%, 95%)',
  colorBlue: '#078cdf',
  colorBlue85: 'hsl(203.05555555555554, 93.9130434783%, 85%)',
  colorBlue95: 'hsl(203.05555555555554, 93.9130434783%, 95%)',
  colorOrange: '#f16d0e',
  colorOrange95: 'hsl(25.110132158590307, 89.0196078431%, 95%)',
  colorRed: '#e60050',
  colorRed95: 'hsl(339.1304347826087, 100%, 95%)',
  colorPurple: '#b866ff',
  colorBlack: '#1a1a1a',
  colorWhite: '#fff',
  borderRadius1: '1px',
  borderRadius2: '2px',
  borderRadius4: '4px',
  borderRadius6: '6px',
  borderRadius20: '20px',
  fontFamilyBody: "'Open Sans', sans-serif",
  fontSizeM: '13px',
  shadow1: '0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24)',
  shadow2: '0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)',
  shadow3: '0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23)',
  shadow4: '0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22)',
  shadow5: '0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22)',
  shadow6: '0 -1px 2px 0 rgba(0, 0, 0, 0.2)',
  shadow7:
    '0 -1px 1.5px 0 rgba(0, 0, 0, 0.12), 0 1px 1px 0 rgba(0, 0, 0, 0.24)',
  shadow8: '0 1px 9.5px 0 rgba(0, 0, 0, 0.12), 0 2px 4px 0 rgba(0, 0, 0, 0.24)',
  shadow9:
    'inset 0 -1px 3px 0 rgba(0, 0, 0, 0.1), inset 0 1px 1.5px 0 rgba(0, 0, 0, 0.2), inset 0 1px 1.5px 0 rgba(0, 0, 0, 0.25)',
  shadow10: '0 0 0 1px rgba(224, 230, 237, 0.5)',
  shadow11:
    '0 1px 0.5px rgba(0, 0, 0, 0.24), 0 -1px 0.75px rgba(0, 0, 0, 0.12)',
  shadow12: '0 0 1px rgba(0, 0, 0, 0.25)',
  shadow13: '0 0 1px rgba(0, 0, 0, 0.25)',
  shadow14: '0 0 0.5px rgba(0, 0, 0, 0.1)',
  shadow15: '0 2px 2px rgba(0, 0, 0, 0.24), 0 1px 4.75px rgba(0, 0, 0, 0.12)',
  constraintScale: '100%',
  constraintXs: '50px',
  constraintS: '132px',
  constraintM: '355px',
  constraintL: '400px',
  constraintXl: '768px',
  spacing4: '4px',
  spacing8: '8px',
  spacing16: '16px',
  spacing24: '24px',
  spacing32: '32px',
  transitionLinear80Ms: '80ms linear',
  transitionEaseinout150Ms: '150ms ease-in-out',
  transitionStandard: 'all 0.2s ease',
  breakPointMobile: '768px',
  breakPointDesktop: '1024px',
  breakPointBiggerdesktop: '1280px',
  breakPointGiantdesktop: '1680px',
  breakPointJumbodesktop: '1920px',
  backgroundColorInputPristine: '#fff',
  backgroundColorInputDisabled: 'hsl(195, 35.2941176471%, 98%)',
  backgroundColorInputHover: 'hsl(0, 0%, 90%)',
  backgroundColorInputSelected: 'hsl(195, 35.2941176471%, 95%)',
  backgroundColorTagPristine: 'hsl(0, 0%, 95%)',
  backgroundColorTagWarning: 'hsl(25.110132158590307, 89.0196078431%, 95%)',
  backgroundColorTagDisabled: 'hsl(0, 0%, 95%)',
  backgroundColorTagNormalHover: 'hsl(0, 0%, 60%)',
  backgroundColorTagWarningHover: '#f16d0e',
  backgroundColorForInput: '#fff',
  backgroundColorForInputWhenDisabled: 'hsl(195, 35.2941176471%, 98%)',
  borderColorInputPristine: 'hsl(0, 0%, 60%)',
  borderColorInputFocus: '#00b39e',
  borderColorInputDisabled: '#ccc',
  borderColorInputReadonly: '#ccc',
  borderColorInputError: '#e60050',
  borderColorInputWarning: '#f16d0e',
  borderColorTagPristine: 'hsl(0, 0%, 60%)',
  borderColorTagWarning: '#f16d0e',
  borderColorTagFocus: '#00b39e',
  borderColorTagWarningHover: '#f16d0e',
  borderColorSeparator: '#ccc',
  borderColorForInput: 'hsl(0, 0%, 60%)',
  borderColorForInputWhenFocused: '#00b39e',
  borderColorForInputWhenDisabled: '#ccc',
  borderColorForInputWhenReadonly: '#ccc',
  borderColorForInputWhenError: '#e60050',
  borderColorForInputWhenWarning: '#f16d0e',
  borderRadiusInput: '6px',
  borderRadiusTag: '2px',
  borderRadiusForInput: '6px',
  fontColorDefault: '#1a1a1a',
  fontColorDisabled: 'hsl(0, 0%, 60%)',
  fontColorError: '#e60050',
  fontColorSuccess: '#00b39e',
  fontColorWarning: '#f16d0e',
  fontColorReadonly: 'hsl(0, 0%, 60%)',
  fontColorPlaceholder: 'hsl(0, 0%, 60%)',
  fontColorForInput: '#1a1a1a',
  fontColorForInputWhenDisabled: 'hsl(0, 0%, 60%)',
  fontColorForInputWhenError: '#e60050',
  fontColorForInputWhenReadonly: 'hsl(0, 0%, 60%)',
  fontColorForInputWhenWarning: '#f16d0e',
  fontFamily: "'Open Sans', sans-serif",
  placeholderFontColorForInput: 'hsl(0, 0%, 60%)',
  fontSizeForInput: '13px',
  shadowBoxTagWhenHovered:
    '0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24)',
  bigButtonHeight: '32px',
  smallButtonHeight: '24px',
  sizeHeightInput: '32px',
  shadow1First: '0 1px 3px rgba(0, 0, 0, 0.12)',
  shadow1Second: '0 1px 2px rgba(0, 0, 0, 0.24)',
  shadow2First: '0 3px 6px rgba(0, 0, 0, 0.16)',
  shadow2Second: '0 3px 6px rgba(0, 0, 0, 0.23)',
  shadow3First: '0 10px 20px rgba(0, 0, 0, 0.19)',
  shadow3Second: '0 6px 6px rgba(0, 0, 0, 0.23)',
  shadow4First: '0 14px 28px rgba(0, 0, 0, 0.25)',
  shadow4Second: '0 10px 10px rgba(0, 0, 0, 0.22)',
  shadow5First: '0 19px 38px rgba(0, 0, 0, 0.3)',
  shadow5Second: '0 15px 12px rgba(0, 0, 0, 0.22)',
  shadow6First: '0 -1px 2px 0 rgba(0, 0, 0, 0.2)',
  shadow7First: '0 -1px 1.5px 0 rgba(0, 0, 0, 0.12)',
  shadow7Second: '0 1px 1px 0 rgba(0, 0, 0, 0.24)',
  shadow8First: '0 1px 9.5px 0 rgba(0, 0, 0, 0.12)',
  shadow8Second: '0 2px 4px 0 rgba(0, 0, 0, 0.24)',
  shadow9First: 'inset 0 -1px 3px 0 rgba(0, 0, 0, 0.1)',
  shadow9Second: 'inset 0 1px 1.5px 0 rgba(0, 0, 0, 0.2)',
  shadow9Third: 'inset 0 1px 1.5px 0 rgba(0, 0, 0, 0.25)',
  shadow10First: '0 0 0 1px rgba(224, 230, 237, 0.5)',
  shadow11First: '0 1px 0.5px rgba(0, 0, 0, 0.24)',
  shadow11Second: '0 -1px 0.75px rgba(0, 0, 0, 0.12)',
  shadow12First: '0 0 1px rgba(0, 0, 0, 0.25)',
  shadow13First: '0 0 1px rgba(0, 0, 0, 0.25)',
  shadow14First: '0 0 0.5px rgba(0, 0, 0, 0.1)',
  shadow15First: '0 2px 2px rgba(0, 0, 0, 0.24)',
  shadow15Second: '0 1px 4.75px rgba(0, 0, 0, 0.12)',
  fontFamilyDefault: "'Open Sans', sans-serif",
  fontSizeDefault: '13px',
  fontSizeSmall: '12px',
  shadowBoxTagHover:
    '0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24)',
  sizeHeightTag: '26px',
  standardInputHeight: '32px',
};

export default customProperties;
