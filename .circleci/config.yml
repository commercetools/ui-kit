version: 2.1

aliases:
  - &working_directory ~/ui-kit

  - &restore_yarn_cache
    name: 'Restoring yarn cache'
    keys:
      - v1-yarn-cache-{{ checksum "yarn.lock" }}
      - v1-yarn-cache

  - &save_yarn_cache
    name: 'Saving yarn cache'
    key: v1-yarn-cache-{{ checksum "yarn.lock" }}
    paths:
      - ~/.cache/yarn
      - node_modules

executors:
  node_10:
    docker:
      - image: circleci/node:10.15
    working_directory: *working_directory

commands:
  install_dependencies:
    description: 'Installing dependencies'
    steps:
      - checkout
      - restore_cache: *restore_yarn_cache
      - run: yarn install --pure-lockfile
      - save_cache: *save_yarn_cache
  build_artifacts:
    description: 'Building artifacts'
    steps:
      - run: yarn build
  save_workspace:
    steps:
      - persist_to_workspace:
          root: *working_directory
          paths:
            - dist
  restore_workspace:
    steps:
      - attach_workspace:
          at: *working_directory
  lint:
    description: 'Running linters'
    steps:
      - run: yarn run jest --projects jest.eslint.config.js --maxWorkers=3 --reporters jest-silent-reporter
  unit_test:
    description: 'Running unit tests'
    steps:
      - run: yarn run jest --projects jest.test.config.js --maxWorkers=3 --reporters jest-silent-reporter
  bundle_test:
    description: 'Running bundle tests'
    steps:
      - run: yarn run jest --projects jest.bundle.config.js --maxWorkers=3 --reporters jest-silent-reporter
  vrt_test:
    description: 'Running Visual Regression Tests'
    steps:
      - run:
          name: Update
          working_directory: *working_directory
          command: |
            sudo apt-get update -y
      - run:
          name: Update
          working_directory: *working_directory
          command: |
            sudo apt-get upgrade -y
      - run:
          name: Install Chrome headless dependencies
          working_directory: *working_directory
          command: |
            sudo apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 \
            libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \
            ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget --fix-missing
      - run: ./scripts/run-percy.sh
  publish_to_next:
    parameters:
      working_directory:
        type: string
        default: *working_directory
    steps:
      - checkout
      - restore_cache: *restore_yarn_cache
      - install_dependencies
      - build_artifacts
      - run:
          name: Authenticating with npm registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > << parameters.working_directory >>/.npmrc
      - run:
          name: Publishing to next dist-tag
          command: yarn release:next

jobs:
  lint_and_test:
    executor: node_10
    steps:
      - install_dependencies
      - lint
      - unit_test
  build:
    executor: node_10
    steps:
      - install_dependencies
      - run: yarn build
      - save_workspace
  bundle_test:
    executor: node_10
    steps:
      - install_dependencies
      - restore_workspace
      - bundle_test
  vrt_test:
    executor: node_10
    steps:
      - install_dependencies
      - restore_workspace
      - vrt_test
  publish:
    executor: node_10
    steps:
      - publish_to_next

workflows:
  version: 2
  build_and_test:
    jobs:
      - lint_and_test
      - build:
          requires:
            - lint_and_test
      - bundle_test:
          requires:
            - build
      - vrt_test:
          requires:
            - build
      - publish:
          requires:
            - bundle_test
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - master
