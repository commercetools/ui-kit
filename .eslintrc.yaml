---
parser: '@typescript-eslint/parser'
parserOptions:
  ecmaFeatures:
    jsx: true
  ecmaVersion: 8
  sourceType: module
extends:
  - 'plugin:@typescript-eslint/recommended'
  - 'plugin:import/errors'
  - 'plugin:import/warnings'
  - 'plugin:import/typescript'
  - 'plugin:jest/recommended'
  - 'plugin:jest-dom/recommended'
  - 'plugin:react/recommended'
  - 'plugin:testing-library/react'
  - 'prettier'
  - 'prettier/react'
  - 'prettier/@typescript-eslint'
plugins:
  - 'formatjs'
  - 'import'
  - 'jest'
  - 'jsx-a11y'
  - 'prettier'
  - 'react'
  - 'react-hooks'
  - '@typescript-eslint/eslint-plugin'
settings:
  import/parsers:
    '@typescript-eslint/parser':
      - '.js'
      - '.jsx'
      - '.ts'
      - '.tsx'
  import/resolver:
    'eslint-import-resolver-typescript': true
    typescript: {}
    node:
      extensions:
        - '.js'
        - '.jsx'
        - '.ts'
        - '.tsx'
  import/ignore:
    # included by default, but replaced if explicitly configured
    - node_modules
    # We use `export * from '@testing-library/react';` in `test-utils`, so that
    # tests can do `import { render, fireEvent }` from '../test-utils'`.
    # Because we export the whole namespace, the `import/ignore` rule can't find
    # the named exports. So we disable the rule for imports of that file.
    - test-utils.js
  react:
    pragma: React
    version: detect

rules:
  '@typescript-eslint/ban-types': 0
  '@typescript-eslint/naming-convention': 0
  '@typescript-eslint/consistent-type-definitions': 0
  '@typescript-eslint/no-explicit-any': 2
  '@typescript-eslint/no-use-before-define':
    - error
    - functions: false
  '@typescript-eslint/no-var-requires': 0
  '@typescript-eslint/unbound-method': 0
  'react/jsx-tag-spacing': 0
  'import/no-extraneous-dependencies': 0
  'import/no-named-as-default': 0
  'import/no-named-as-default-member': 0
  'import/default': 0
  'import/no-unresolved': 2
  'react-hooks/rules-of-hooks': 2
  'react-hooks/exhaustive-deps': 1
  'jest/expect-expect': 0
  'testing-library/prefer-presence-queries': 2
  'testing-library/await-async-query': 2

overrides:
  - files: ['*.story.js']
    rules:
      '@typescript-eslint/no-empty-function': 1
      '@typescript-eslint/no-use-before-define': 1
      'max-classes-per-file': 0
      'import/namespace': 1
      'react/display-name': 0
  - files: ['*.spec.js', '**/docs/*.js']
    rules:
      '@typescript-eslint/no-empty-function': 1
      'react/display-name': 0
      'react/prop-types': 0
  - files: ['*.visualroute.js']
    rules:
      '@typescript-eslint/no-empty-function': 1
      'react/prop-types': 0
      'react/display-name': 0
  - files: ['*.visualspec.js']
    globals:
      page: true
      HOST: true
  - files: ['*.ts', '*.tsx']
    rules:
      '@typescript-eslint/ban-ts-comment': 0
      '@typescript-eslint/explicit-function-return-type': 0
      '@typescript-eslint/explicit-member-accessibility':
        - error
        - accessibility: 'no-public'
      '@typescript-eslint/no-require-imports': 0
      '@typescript-eslint/promise-function-async': 0
      'react/prop-types': 0
