/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-postinstall",
factory: function (require) {
var plugin=(()=>{var k=Object.create,r=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var P=t=>r(t,"__esModule",{value:!0});var a=t=>{if(typeof require!="undefined")return require(t);throw new Error('Dynamic require of "'+t+'" is not supported')};var C=(t,o)=>{for(var n in o)r(t,n,{get:o[n],enumerable:!0})},S=(t,o,n)=>{if(o&&typeof o=="object"||typeof o=="function")for(let e of h(o))!y.call(t,e)&&e!=="default"&&r(t,e,{get:()=>o[e],enumerable:!(n=w(o,e))||n.enumerable});return t},i=t=>S(P(r(t!=null?k(x(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var A={};C(A,{default:()=>R});var s=i(a("@yarnpkg/core")),d=i(a("@yarnpkg/cli")),u=i(a("clipanion"));var m=i(a("@yarnpkg/core")),g={postinstall:{description:"Postinstall hook that will always run in Yarn v2+",type:m.SettingsType.STRING,default:""}};var f=i(a("@yarnpkg/shell")),c=i(a("@yarnpkg/core")),p=async(t,o)=>{if(process.env.YARN_ENABLE_SCRIPTS==="0"){console.log('Skipping postinstall because of "YARN_ENABLE_SCRIPTS=0"');return}switch(o==null?void 0:o.mode){case c.InstallMode.SkipBuild:case c.InstallMode.UpdateLockfile:{console.log(`Skipping postinstall because of "--mode=${o==null?void 0:o.mode}"`);return}default:break}let n=t.configuration.get("postinstall");console.log(`Running postinstall command "${n}" from the workspace root...`);let e=await(0,f.execute)(n,[],{cwd:t.cwd});if(e!==0)throw new Error(`The postinstall command failed with exit code ${e}`)};var l=class extends d.BaseCommand{async execute(){let o=await s.Configuration.find(this.context.cwd,this.context.plugins),{project:n}=await s.Project.find(o,this.context.cwd);await p(n)}};l.paths=[["postinstall"]],l.usage=u.Command.Usage({description:'Manually trigger the "postinstall" command'});var I={configuration:g,commands:[l],hooks:{afterAllInstalled:p}},R=I;return A;})();
return plugin;
}
};
