/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-postinstall",
factory: function (require) {
var plugin=(()=>{var k=Object.create,r=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var P=o=>r(o,"__esModule",{value:!0});var a=o=>{if(typeof require!="undefined")return require(o);throw new Error('Dynamic require of "'+o+'" is not supported')};var C=(o,t)=>{for(var n in t)r(o,n,{get:t[n],enumerable:!0})},S=(o,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of h(t))!y.call(o,i)&&i!=="default"&&r(o,i,{get:()=>t[i],enumerable:!(n=w(t,i))||n.enumerable});return o},e=o=>S(P(r(o!=null?k(x(o)):{},"default",o&&o.__esModule&&"default"in o?{get:()=>o.default,enumerable:!0}:{value:o,enumerable:!0})),o);var A={};C(A,{default:()=>R});var s=e(a("@yarnpkg/core")),d=e(a("@yarnpkg/cli")),u=e(a("clipanion"));var p=e(a("@yarnpkg/core")),m={postinstall:{description:"Postinstall hook that will always run in Yarn v2+",type:p.SettingsType.STRING,default:""}};var g=e(a("@yarnpkg/shell")),f=e(a("@yarnpkg/core")),c=async(o,t)=>{if(process.env.YARN_ENABLE_SCRIPTS==="0"){console.log('Skipping postinstall because of "YARN_ENABLE_SCRIPTS=0"');return}if((t==null?void 0:t.mode)===f.InstallMode.SkipBuild){console.log('Skipping postinstall because of "--mode=skip-build"');return}let n=o.configuration.get("postinstall");console.log(`Running postinstall command "${n}" from the workspace root...`);let i=await(0,g.execute)(n,[],{cwd:o.cwd});if(i!==0)throw new Error(`The postinstall command failed with exit code ${i}`)};var l=class extends d.BaseCommand{async execute(){let t=await s.Configuration.find(this.context.cwd,this.context.plugins),{project:n}=await s.Project.find(t,this.context.cwd);await c(n)}};l.paths=[["postinstall"]],l.usage=u.Command.Usage({description:'Manually trigger the "postinstall" command'});var I={configuration:m,commands:[l],hooks:{afterAllInstalled:c}},R=I;return A;})();
return plugin;
}
};
